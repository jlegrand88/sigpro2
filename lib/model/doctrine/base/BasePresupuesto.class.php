<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Presupuesto', 'doctrine');

/**
 * BasePresupuesto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_presupuesto
 * @property integer $id_proyecto
 * @property integer $id_tipo_movimiento
 * @property string $cuenta
 * @property string $nombre_cuenta
 * @property string $periodo
 * @property integer $enero
 * @property integer $febrero
 * @property integer $marzo
 * @property integer $abril
 * @property integer $mayo
 * @property integer $junio
 * @property integer $julio
 * @property integer $agosto
 * @property integer $septiembre
 * @property integer $octubre
 * @property integer $noviembre
 * @property integer $diciembre
 * @property integer $tiene_overhead
 * @property integer $cuenta_overhead
 * @property Proyecto $Proyecto
 * @property TipoMovimiento $TipoMovimiento
 * 
 * @method integer        getIdPresupuesto()      Returns the current record's "id_presupuesto" value
 * @method integer        getIdProyecto()         Returns the current record's "id_proyecto" value
 * @method integer        getIdTipoMovimiento()   Returns the current record's "id_tipo_movimiento" value
 * @method string         getCuenta()             Returns the current record's "cuenta" value
 * @method string         getNombreCuenta()       Returns the current record's "nombre_cuenta" value
 * @method string         getPeriodo()            Returns the current record's "periodo" value
 * @method integer        getEnero()              Returns the current record's "enero" value
 * @method integer        getFebrero()            Returns the current record's "febrero" value
 * @method integer        getMarzo()              Returns the current record's "marzo" value
 * @method integer        getAbril()              Returns the current record's "abril" value
 * @method integer        getMayo()               Returns the current record's "mayo" value
 * @method integer        getJunio()              Returns the current record's "junio" value
 * @method integer        getJulio()              Returns the current record's "julio" value
 * @method integer        getAgosto()             Returns the current record's "agosto" value
 * @method integer        getSeptiembre()         Returns the current record's "septiembre" value
 * @method integer        getOctubre()            Returns the current record's "octubre" value
 * @method integer        getNoviembre()          Returns the current record's "noviembre" value
 * @method integer        getDiciembre()          Returns the current record's "diciembre" value
 * @method integer        getTieneOverhead()      Returns the current record's "tiene_overhead" value
 * @method integer        getCuentaOverhead()     Returns the current record's "cuenta_overhead" value
 * @method Proyecto       getProyecto()           Returns the current record's "Proyecto" value
 * @method TipoMovimiento getTipoMovimiento()     Returns the current record's "TipoMovimiento" value
 * @method Presupuesto    setIdPresupuesto()      Sets the current record's "id_presupuesto" value
 * @method Presupuesto    setIdProyecto()         Sets the current record's "id_proyecto" value
 * @method Presupuesto    setIdTipoMovimiento()   Sets the current record's "id_tipo_movimiento" value
 * @method Presupuesto    setCuenta()             Sets the current record's "cuenta" value
 * @method Presupuesto    setNombreCuenta()       Sets the current record's "nombre_cuenta" value
 * @method Presupuesto    setPeriodo()            Sets the current record's "periodo" value
 * @method Presupuesto    setEnero()              Sets the current record's "enero" value
 * @method Presupuesto    setFebrero()            Sets the current record's "febrero" value
 * @method Presupuesto    setMarzo()              Sets the current record's "marzo" value
 * @method Presupuesto    setAbril()              Sets the current record's "abril" value
 * @method Presupuesto    setMayo()               Sets the current record's "mayo" value
 * @method Presupuesto    setJunio()              Sets the current record's "junio" value
 * @method Presupuesto    setJulio()              Sets the current record's "julio" value
 * @method Presupuesto    setAgosto()             Sets the current record's "agosto" value
 * @method Presupuesto    setSeptiembre()         Sets the current record's "septiembre" value
 * @method Presupuesto    setOctubre()            Sets the current record's "octubre" value
 * @method Presupuesto    setNoviembre()          Sets the current record's "noviembre" value
 * @method Presupuesto    setDiciembre()          Sets the current record's "diciembre" value
 * @method Presupuesto    setTieneOverhead()      Sets the current record's "tiene_overhead" value
 * @method Presupuesto    setCuentaOverhead()     Sets the current record's "cuenta_overhead" value
 * @method Presupuesto    setProyecto()           Sets the current record's "Proyecto" value
 * @method Presupuesto    setTipoMovimiento()     Sets the current record's "TipoMovimiento" value
 * 
 * @package    sigpro
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePresupuesto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('presupuesto');
        $this->hasColumn('id_presupuesto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_proyecto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_tipo_movimiento', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cuenta', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('nombre_cuenta', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('periodo', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('enero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('febrero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('marzo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('abril', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('mayo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('junio', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('julio', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('agosto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('septiembre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('octubre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('noviembre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('diciembre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tiene_overhead', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cuenta_overhead', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proyecto', array(
             'local' => 'id_proyecto',
             'foreign' => 'id_proyecto'));

        $this->hasOne('TipoMovimiento', array(
             'local' => 'id_tipo_movimiento',
             'foreign' => 'id_tipo_movimiento'));
    }
}