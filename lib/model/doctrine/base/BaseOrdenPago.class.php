<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OrdenPago', 'doctrine');

/**
 * BaseOrdenPago
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_orden_pago
 * @property integer $folio
 * @property integer $id_moneda
 * @property integer $id_proyecto
 * @property integer $id_usuario
 * @property integer $rut_proveedor
 * @property timestamp $fecha_ingreso
 * @property timestamp $fecha_contabilizado
 * @property string $observacion
 * @property Proyecto $Proyecto
 * @property Usuario $Usuario
 * @property Doctrine_Collection $DetalleOrdenPago
 * @property Doctrine_Collection $ArchivoOrdenPago
 * @property Proveedor $Proveedor
 * 
 * @method integer             getIdOrdenPago()         Returns the current record's "id_orden_pago" value
 * @method integer             getFolio()               Returns the current record's "folio" value
 * @method integer             getIdMoneda()            Returns the current record's "id_moneda" value
 * @method integer             getIdProyecto()          Returns the current record's "id_proyecto" value
 * @method integer             getIdUsuario()           Returns the current record's "id_usuario" value
 * @method integer             getRutProveedor()        Returns the current record's "rut_proveedor" value
 * @method timestamp           getFechaIngreso()        Returns the current record's "fecha_ingreso" value
 * @method timestamp           getFechaContabilizado()  Returns the current record's "fecha_contabilizado" value
 * @method string              getObservacion()         Returns the current record's "observacion" value
 * @method Proyecto            getProyecto()            Returns the current record's "Proyecto" value
 * @method Usuario             getUsuario()             Returns the current record's "Usuario" value
 * @method Doctrine_Collection getDetalleOrdenPago()    Returns the current record's "DetalleOrdenPago" collection
 * @method Doctrine_Collection getArchivoOrdenPago()    Returns the current record's "ArchivoOrdenPago" collection
 * @method Proveedor           getProveedor()           Returns the current record's "Proveedor" value
 * @method OrdenPago           setIdOrdenPago()         Sets the current record's "id_orden_pago" value
 * @method OrdenPago           setFolio()               Sets the current record's "folio" value
 * @method OrdenPago           setIdMoneda()            Sets the current record's "id_moneda" value
 * @method OrdenPago           setIdProyecto()          Sets the current record's "id_proyecto" value
 * @method OrdenPago           setIdUsuario()           Sets the current record's "id_usuario" value
 * @method OrdenPago           setRutProveedor()        Sets the current record's "rut_proveedor" value
 * @method OrdenPago           setFechaIngreso()        Sets the current record's "fecha_ingreso" value
 * @method OrdenPago           setFechaContabilizado()  Sets the current record's "fecha_contabilizado" value
 * @method OrdenPago           setObservacion()         Sets the current record's "observacion" value
 * @method OrdenPago           setProyecto()            Sets the current record's "Proyecto" value
 * @method OrdenPago           setUsuario()             Sets the current record's "Usuario" value
 * @method OrdenPago           setDetalleOrdenPago()    Sets the current record's "DetalleOrdenPago" collection
 * @method OrdenPago           setArchivoOrdenPago()    Sets the current record's "ArchivoOrdenPago" collection
 * @method OrdenPago           setProveedor()           Sets the current record's "Proveedor" value
 * 
 * @package    sigpro
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrdenPago extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orden_pago');
        $this->hasColumn('id_orden_pago', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('folio', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_moneda', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_proyecto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_usuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rut_proveedor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha_ingreso', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_contabilizado', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('observacion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proyecto', array(
             'local' => 'id_proyecto',
             'foreign' => 'id_proyecto'));

        $this->hasOne('Usuario', array(
             'local' => 'id_usuario',
             'foreign' => 'id_usuario'));

        $this->hasMany('DetalleOrdenPago', array(
             'local' => 'id_orden_pago',
             'foreign' => 'id_orden_pago'));

        $this->hasMany('ArchivoOrdenPago', array(
             'local' => 'id_orden_pago',
             'foreign' => 'id_orden_pago'));

        $this->hasOne('Proveedor', array(
             'local' => 'rut_proveedor',
             'foreign' => 'rut_proveedor'));
    }
}